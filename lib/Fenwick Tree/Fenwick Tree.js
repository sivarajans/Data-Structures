"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports["default"]=void 0;function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor))throw new TypeError("Cannot call a class as a function")}function _defineProperties(target,props){for(var descriptor,i=0;i<props.length;i++)descriptor=props[i],descriptor.enumerable=descriptor.enumerable||!1,descriptor.configurable=!0,"value"in descriptor&&(descriptor.writable=!0),Object.defineProperty(target,descriptor.key,descriptor)}function _createClass(Constructor,protoProps,staticProps){return protoProps&&_defineProperties(Constructor.prototype,protoProps),staticProps&&_defineProperties(Constructor,staticProps),Constructor}var FenWickTree=function(){function FenWickTree(array){_classCallCheck(this,FenWickTree),this.fenwick=[0].concat(array),this._construct()}return _createClass(FenWickTree,[{key:"add",value:function add(index,value){for(;index<this.fenwick.length;)this.fenwick[index]+=value,index+=this._getLSB(index)}},{key:"set",value:function set(index,value){var currentSum=this.rangeSum(index,index);this.add(index,value-currentSum)}},{key:"prefixSum",value:function prefixSum(untilIndex){for(var sum=0;0<untilIndex;)sum+=this.fenwick[untilIndex],untilIndex-=this._getLSB(untilIndex);return sum}},{key:"rangeSum",value:function rangeSum(fromIndex,toIndex){return this.prefixSum(toIndex)-this.prefixSum(fromIndex-1)}},{key:"_construct",value:function _construct(){for(var j,i=1;i<this.fenwick.length;i++)j=i+this._getLSB(i),j<this.fenwick.length&&(this.fenwick[j]+=this.fenwick[i])}},{key:"_getLSB",value:function _getLSB(pos){return pos&-pos}}]),FenWickTree}();exports["default"]=FenWickTree;